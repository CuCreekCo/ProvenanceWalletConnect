//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: cosmos/staking/v1beta1/query.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Query defines the gRPC querier service.
///
/// Usage: instantiate `Cosmos_Staking_V1beta1_QueryClient`, then call methods of this protocol to make API calls.
internal protocol Cosmos_Staking_V1beta1_QueryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Cosmos_Staking_V1beta1_QueryClientInterceptorFactoryProtocol? { get }

  func validators(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse>

  func validator(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse>

  func validatorDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorDelegationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorDelegationsRequest, Cosmos_Staking_V1beta1_QueryValidatorDelegationsResponse>

  func validatorUnbondingDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsRequest, Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsResponse>

  func delegation(
    _ request: Cosmos_Staking_V1beta1_QueryDelegationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegationRequest, Cosmos_Staking_V1beta1_QueryDelegationResponse>

  func unbondingDelegation(
    _ request: Cosmos_Staking_V1beta1_QueryUnbondingDelegationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryUnbondingDelegationRequest, Cosmos_Staking_V1beta1_QueryUnbondingDelegationResponse>

  func delegatorDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorDelegationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorDelegationsRequest, Cosmos_Staking_V1beta1_QueryDelegatorDelegationsResponse>

  func delegatorUnbondingDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsRequest, Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsResponse>

  func redelegations(
    _ request: Cosmos_Staking_V1beta1_QueryRedelegationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryRedelegationsRequest, Cosmos_Staking_V1beta1_QueryRedelegationsResponse>

  func delegatorValidators(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorValidatorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorValidatorsRequest, Cosmos_Staking_V1beta1_QueryDelegatorValidatorsResponse>

  func delegatorValidator(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorValidatorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorValidatorRequest, Cosmos_Staking_V1beta1_QueryDelegatorValidatorResponse>

  func historicalInfo(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>

  func pool(
    _ request: Cosmos_Staking_V1beta1_QueryPoolRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryPoolRequest, Cosmos_Staking_V1beta1_QueryPoolResponse>

  func params(
    _ request: Cosmos_Staking_V1beta1_QueryParamsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryParamsRequest, Cosmos_Staking_V1beta1_QueryParamsResponse>
}

extension Cosmos_Staking_V1beta1_QueryClientProtocol {
  internal var serviceName: String {
    return "cosmos.staking.v1beta1.Query"
  }

  /// Validators queries all validators that match the given status.
  ///
  /// - Parameters:
  ///   - request: Request to send to Validators.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validators(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/Validators",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorsInterceptors() ?? []
    )
  }

  /// Validator queries validator info for given validator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to Validator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validator(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/Validator",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorInterceptors() ?? []
    )
  }

  /// ValidatorDelegations queries delegate info for given validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorDelegations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorDelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorDelegationsRequest, Cosmos_Staking_V1beta1_QueryValidatorDelegationsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/ValidatorDelegations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorDelegationsInterceptors() ?? []
    )
  }

  /// ValidatorUnbondingDelegations queries unbonding delegations of a validator.
  ///
  /// - Parameters:
  ///   - request: Request to send to ValidatorUnbondingDelegations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func validatorUnbondingDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsRequest, Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/ValidatorUnbondingDelegations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeValidatorUnbondingDelegationsInterceptors() ?? []
    )
  }

  /// Delegation queries delegate info for given validator delegator pair.
  ///
  /// - Parameters:
  ///   - request: Request to send to Delegation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegation(
    _ request: Cosmos_Staking_V1beta1_QueryDelegationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegationRequest, Cosmos_Staking_V1beta1_QueryDelegationResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/Delegation",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegationInterceptors() ?? []
    )
  }

  /// UnbondingDelegation queries unbonding info for given validator delegator
  /// pair.
  ///
  /// - Parameters:
  ///   - request: Request to send to UnbondingDelegation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func unbondingDelegation(
    _ request: Cosmos_Staking_V1beta1_QueryUnbondingDelegationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryUnbondingDelegationRequest, Cosmos_Staking_V1beta1_QueryUnbondingDelegationResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/UnbondingDelegation",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbondingDelegationInterceptors() ?? []
    )
  }

  /// DelegatorDelegations queries all delegations of a given delegator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to DelegatorDelegations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegatorDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorDelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorDelegationsRequest, Cosmos_Staking_V1beta1_QueryDelegatorDelegationsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/DelegatorDelegations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegatorDelegationsInterceptors() ?? []
    )
  }

  /// DelegatorUnbondingDelegations queries all unbonding delegations of a given
  /// delegator address.
  ///
  /// - Parameters:
  ///   - request: Request to send to DelegatorUnbondingDelegations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegatorUnbondingDelegations(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsRequest, Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/DelegatorUnbondingDelegations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegatorUnbondingDelegationsInterceptors() ?? []
    )
  }

  /// Redelegations queries redelegations of given address.
  ///
  /// - Parameters:
  ///   - request: Request to send to Redelegations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func redelegations(
    _ request: Cosmos_Staking_V1beta1_QueryRedelegationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryRedelegationsRequest, Cosmos_Staking_V1beta1_QueryRedelegationsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/Redelegations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRedelegationsInterceptors() ?? []
    )
  }

  /// DelegatorValidators queries all validators info for given delegator
  /// address.
  ///
  /// - Parameters:
  ///   - request: Request to send to DelegatorValidators.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegatorValidators(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorValidatorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorValidatorsRequest, Cosmos_Staking_V1beta1_QueryDelegatorValidatorsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/DelegatorValidators",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegatorValidatorsInterceptors() ?? []
    )
  }

  /// DelegatorValidator queries validator info for given delegator validator
  /// pair.
  ///
  /// - Parameters:
  ///   - request: Request to send to DelegatorValidator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func delegatorValidator(
    _ request: Cosmos_Staking_V1beta1_QueryDelegatorValidatorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryDelegatorValidatorRequest, Cosmos_Staking_V1beta1_QueryDelegatorValidatorResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/DelegatorValidator",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDelegatorValidatorInterceptors() ?? []
    )
  }

  /// HistoricalInfo queries the historical info for given height.
  ///
  /// - Parameters:
  ///   - request: Request to send to HistoricalInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func historicalInfo(
    _ request: Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/HistoricalInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeHistoricalInfoInterceptors() ?? []
    )
  }

  /// Pool queries the pool info.
  ///
  /// - Parameters:
  ///   - request: Request to send to Pool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func pool(
    _ request: Cosmos_Staking_V1beta1_QueryPoolRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryPoolRequest, Cosmos_Staking_V1beta1_QueryPoolResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/Pool",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePoolInterceptors() ?? []
    )
  }

  /// Parameters queries the staking parameters.
  ///
  /// - Parameters:
  ///   - request: Request to send to Params.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func params(
    _ request: Cosmos_Staking_V1beta1_QueryParamsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cosmos_Staking_V1beta1_QueryParamsRequest, Cosmos_Staking_V1beta1_QueryParamsResponse> {
    return self.makeUnaryCall(
      path: "/cosmos.staking.v1beta1.Query/Params",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeParamsInterceptors() ?? []
    )
  }
}

internal protocol Cosmos_Staking_V1beta1_QueryClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'validators'.
  func makeValidatorsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryValidatorsRequest, Cosmos_Staking_V1beta1_QueryValidatorsResponse>]

  /// - Returns: Interceptors to use when invoking 'validator'.
  func makeValidatorInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryValidatorRequest, Cosmos_Staking_V1beta1_QueryValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorDelegations'.
  func makeValidatorDelegationsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryValidatorDelegationsRequest, Cosmos_Staking_V1beta1_QueryValidatorDelegationsResponse>]

  /// - Returns: Interceptors to use when invoking 'validatorUnbondingDelegations'.
  func makeValidatorUnbondingDelegationsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsRequest, Cosmos_Staking_V1beta1_QueryValidatorUnbondingDelegationsResponse>]

  /// - Returns: Interceptors to use when invoking 'delegation'.
  func makeDelegationInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryDelegationRequest, Cosmos_Staking_V1beta1_QueryDelegationResponse>]

  /// - Returns: Interceptors to use when invoking 'unbondingDelegation'.
  func makeUnbondingDelegationInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryUnbondingDelegationRequest, Cosmos_Staking_V1beta1_QueryUnbondingDelegationResponse>]

  /// - Returns: Interceptors to use when invoking 'delegatorDelegations'.
  func makeDelegatorDelegationsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryDelegatorDelegationsRequest, Cosmos_Staking_V1beta1_QueryDelegatorDelegationsResponse>]

  /// - Returns: Interceptors to use when invoking 'delegatorUnbondingDelegations'.
  func makeDelegatorUnbondingDelegationsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsRequest, Cosmos_Staking_V1beta1_QueryDelegatorUnbondingDelegationsResponse>]

  /// - Returns: Interceptors to use when invoking 'redelegations'.
  func makeRedelegationsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryRedelegationsRequest, Cosmos_Staking_V1beta1_QueryRedelegationsResponse>]

  /// - Returns: Interceptors to use when invoking 'delegatorValidators'.
  func makeDelegatorValidatorsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryDelegatorValidatorsRequest, Cosmos_Staking_V1beta1_QueryDelegatorValidatorsResponse>]

  /// - Returns: Interceptors to use when invoking 'delegatorValidator'.
  func makeDelegatorValidatorInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryDelegatorValidatorRequest, Cosmos_Staking_V1beta1_QueryDelegatorValidatorResponse>]

  /// - Returns: Interceptors to use when invoking 'historicalInfo'.
  func makeHistoricalInfoInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryHistoricalInfoRequest, Cosmos_Staking_V1beta1_QueryHistoricalInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'pool'.
  func makePoolInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryPoolRequest, Cosmos_Staking_V1beta1_QueryPoolResponse>]

  /// - Returns: Interceptors to use when invoking 'params'.
  func makeParamsInterceptors() -> [ClientInterceptor<Cosmos_Staking_V1beta1_QueryParamsRequest, Cosmos_Staking_V1beta1_QueryParamsResponse>]
}

internal final class Cosmos_Staking_V1beta1_QueryClient: Cosmos_Staking_V1beta1_QueryClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Cosmos_Staking_V1beta1_QueryClientInterceptorFactoryProtocol?

  /// Creates a client for the cosmos.staking.v1beta1.Query service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cosmos_Staking_V1beta1_QueryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

